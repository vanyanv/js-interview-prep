/*
Problem: Find the Difference
Difficulty: Easy
Category: Strings, Hash Map
LeetCode: #389
Pattern: Character Frequency Difference

You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

Example 1:
  Input: s = "abcd", t = "abcde"
  Output: "e"
  Explanation: 'e' is the letter that was added.

Example 2:
  Input: s = "", t = "y"
  Output: "y"

Example 3:
  Input: s = "a", t = "aa"
  Output: "a"

Example 4:
  Input: s = "ae", t = "aea"
  Output: "a"

Constraints:
  - 0 <= s.length <= 1000
  - t.length == s.length + 1
  - s and t consist of lowercase English letters only.

Time Complexity: O(n)
Space Complexity: O(1) - at most 26 characters

Hash Map Pattern Notes:
  - Count characters in both strings
  - Find character with different frequency
  - Alternative: XOR all characters (duplicates cancel out)
  - Alternative: sum ASCII values and find difference
  - Map solution is most readable and generalizable
*/

export const functionName = 'findTheDifference';

export const tests = [
  {
    input: ["abcd", "abcde"],
    expected: "e"
  },
  {
    input: ["", "y"],
    expected: "y"
  },
  {
    input: ["a", "aa"],
    expected: "a"
  },
  {
    input: ["ae", "aea"],
    expected: "a"
  },
  {
    input: ["abc", "acbc"],
    expected: "c"
  },
  {
    input: ["abcdefg", "abcdefgh"],
    expected: "h"
  },
  {
    input: ["ymbgaraibkfmvocpiybee", "ymbgaraibkfmvocpiybeer"],
    expected: "r"
  },
  {
    input: ["a", "ba"],
    expected: "b"
  }
];